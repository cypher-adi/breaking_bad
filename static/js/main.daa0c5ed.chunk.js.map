{"version":3,"sources":["img/logo.png","img/spinner.gif","components/ui/Header.js","components/characters/CharacterItem.js","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","components/characters/CharacterMain.js","components/quotes/QuotesItem.js","components/quotes/QuotesGrid.js","components/quotes/QuotesMain.js","App.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","style","marginBottom","to","CharacterItem","item","img","name","portrayed","nickname","birthday","status","Spinner","spinner","width","margin","display","CharacterGrid","isLoading","items","map","key","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","CharacterMain","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","data","fetchItems","QuotesItem","quote","author","QuotesGrid","quotes","quote_id","QuotesMain","setQuotes","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daa0c5ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import React from 'react';\r\nimport logo from '../../img/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <header className='center'>\r\n        <img src={logo} alt='' />\r\n      </header>\r\n      <h1 className='center' style={{ marginBottom: 20 }}>\r\n        <Link to='/breaking_bad'>Cast</Link> â€¢{' '}\r\n        <Link to='/breaking_bad/quotes'>Quotes</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst CharacterItem = ({ item }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-inner'>\r\n        <div className='card-front'>\r\n          <img src={item.img} alt='' />\r\n        </div>\r\n        <div className='card-back'>\r\n          <h1>{item.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {item.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {item.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Birthday:</strong> {item.birthday}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {item.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n","import React from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading'\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport CharacterItem from './CharacterItem';\r\nimport Spinner from '../ui/Spinner';\r\n\r\nconst CharacterGrid = ({ isLoading, items }) => {\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <section className='cards'>\r\n      {items.map((item) => (\r\n        <CharacterItem key={item.char_id} item={item} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterGrid;\r\n","import React, { useState } from 'react';\r\n\r\nconst Search = ({ getQuery }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange = (q) => {\r\n    setText(q);\r\n    getQuery(q);\r\n  };\r\n\r\n  return (\r\n    <section className='search'>\r\n      <form>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Search...'\r\n          value={text}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          autoFocus\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CharacterGrid from './CharacterGrid';\r\nimport Search from '../ui/Search';\r\nimport axios from 'axios';\r\n\r\nconst CharacterMain = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [query, setQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      setIsLoading(true);\r\n\r\n      const result = await axios(\r\n        `https://www.breakingbadapi.com/api/characters?name=${query}`\r\n      );\r\n\r\n      setItems(result.data);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchItems();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <Search getQuery={(q) => setQuery(q)} />\r\n      <CharacterGrid isLoading={isLoading} items={items} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterMain;\r\n","import React from 'react';\r\n\r\nconst QuotesItem = ({ quote }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-inner'>\r\n        <div className='card-front-q'>\r\n          {'\"'}\r\n          {quote.quote}\r\n          {'\"'}\r\n        </div>\r\n        <div className='card-back'>\r\n          <h1>{quote.author}</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotesItem;\r\n","import React from 'react';\r\nimport QuotesItem from './QuotesItem';\r\nimport Spinner from '../ui/Spinner';\r\n\r\nconst QuotesGrid = ({ isLoading, quotes }) => {\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <section className='cards'>\r\n      {quotes.map((quote) => (\r\n        <QuotesItem key={quote.quote_id} quote={quote} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default QuotesGrid;\r\n","import React, { useState, useEffect } from 'react';\r\nimport QuotesGrid from './QuotesGrid';\r\nimport Search from '../ui/Search';\r\nimport axios from 'axios';\r\n\r\nconst QuotesMain = () => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [query, setQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      setIsLoading(true);\r\n\r\n      const result = query\r\n        ? await axios(\r\n            `https://www.breakingbadapi.com/api/quote?author=${query}`\r\n          )\r\n        : await axios(`https://www.breakingbadapi.com/api/quotes`);\r\n\r\n      setQuotes(result.data);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchItems();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <Search getQuery={(q) => setQuery(q)} />\r\n      <QuotesGrid isLoading={isLoading} quotes={quotes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotesMain;\r\n","import React from 'react';\nimport Header from './components/ui/Header';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CharacterMain from './components/characters/CharacterMain';\nimport QuotesMain from './components/quotes/QuotesMain';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className='container'>\n        <Header />\n        <Switch>\n          <Route exact path='/breaking_bad/' component={CharacterMain} />\n          <Route exact path='/breaking_bad/quotes' component={QuotesMain} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}